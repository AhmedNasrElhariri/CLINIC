scalar Date
scalar VitalData
scalar JSON
scalar Upload

enum PatientMembershipType {
  Primary
  Secondary
}

enum AppointmentType {
  Examination
  Followup
  Urgent
}

enum Sex {
  Female
  Male
}

enum FieldType {
  Text
  Number
  LongText
}

enum AppointmentStatus {
  Scheduled
  Cancelled
  Missed
  Changed
  Archived
  Done
}

########################### Query ##################################

type Query {
  hello(name: String): String!
  patients: [Patient!]
  clinicPatients(clinicId: ID!): [Patient!]
  appointments(input: AppointmentQueryInput): [Appointment!]
  appointment(id: ID!): Appointment
  appointmentHistory(appointmentId: ID, patientId: ID): [Appointment!]
  patient(id: ID!): Patient
  listMyViews: [View!]
  activeView: View!
  listMyViewsStatus: ViewStatus
  myClinics: [Clinic!]
  mySnippets: [Snippet!]
  patientLabs(patientId: ID!): [PatientLab!]
  medicalHistory(patientId: ID!): [MedicalHistory!]
  familyHistory(patientId: ID!): [FamilyHistory!]
  expenses(clinicId: ID!): [Expense!]
  revenues(clinicId: ID!): [Revenue!]
  search(q: String!, patient: Boolean, snippet: Boolean): SearchResult
  clinicUsers(clinicId: ID!): [User!]
  user(id: ID!): User
}

########################### Mutation ##################################

type Mutation {
  createPatient(input: PatientInput!): Patient!
  createAppointment(input: AppointmentInput!): Appointment!
  updateAppointment(appointment: UpdateAppointmentInput!): Appointment!
  archiveAppointment(id: ID!): Appointment!
  setAppointmentDone(id: ID!): Appointment!
  createView(view: ViewInput!): Boolean
  editView(groups: [FieldGroupInput!]): Boolean
  login(email: String!, password: String!): AuthPayload
  verify(token: String): User
  changePassword(currentPassword: String!, newPassword: String!): AuthPayload
  activateView(viewId: ID!): ViewStatus!
  createDefaultView: Boolean
  adjustAppointment(id: ID!, date: Date!): Appointment!
  cancelAppointment(id: ID!): Appointment!
  singleUpload(file: Upload!): File!
  multipleUpload(files: [Upload!]!): [File!]!
  updateClinic(clinic: ClinicInput!): Clinic
  createSnippet(snippet: SnippetInput!): Snippet!
  addLabDocs(patientLab: PatientLabInput!): PatientLab!
  createMedicalHistory(medicalHistory: MedicalHistoryInput!): MedicalHistory!
  createFamilyHistory(familyHistory: FamilyHistoryInput!): FamilyHistory!
  createExpense(expense: ExpenseInput!): Expense
  createRevenue(revenue: RevenueInput!): Revenue
  updateExpense(expense: ExpenseUpdateInput!): Expense
  updateRevenue(revenue: RevenueUpdateInput!): Revenue
  setAvatar(url: String!): Boolean
  updateUserPermissions(userId: ID!, permissions: [PermissionInput!]!): Boolean
}

########################### Auth ##################################

type AuthPayload {
  token: String
  user: User
}

input UserLoginInput {
  email: String!
  password: String!
}

########################### User ##################################

type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]
  avatar: String
}

type Permission {
  action: String
  subject: String
}

input PermissionInput {
  action: String
  subject: String
}

########################### Search ##################################

interface Searchable {
  searchName: String!
}

type SearchResult {
  patients: [Patient!]
  snippets: [Snippet!]
}

########################### Patient ##################################

type Patient implements Searchable {
  id: ID!
  type: PatientMembershipType!
  name: String!
  searchName: String!
  phoneNo: String!
  age: Int!
  sex: Sex!
  appointments: [Appointment!]
}

input PatientInput {
  name: String!
  phoneNo: String!
  age: Int!
  sex: Sex!
  type: PatientMembershipType!
  guardianName: String
}

########################### Appointment ##################################

type Appointment {
  id: ID!
  date: Date
  type: AppointmentType!
  status: AppointmentStatus!
  labs: JSON
  patient: Patient!
  data: [AppointmentField!]
}

type AppointmentField {
  id: ID!
  value: JSON
  field: Field!
}

input AppointmentInput {
  patient: ID!
  date: Date!
  type: AppointmentType!
  clinicId: ID!
  labs: JSON
}

input UpdateAppointmentInput {
  id: ID!
  labs: JSON
  data: [AppointmentFieldInput!]
}

input AppointmentQueryInput {
  clinicIds: [ID!]!
  patients: [ID]
  fromDate: Date
  toDate: Date
  type: AppointmentType
}

input AppointmentFieldInput {
  id: ID
  value: JSON
  fieldId: ID!
}

########################### views ##################################

type View {
  id: ID!
  name: String
  default: Boolean
  user: User
  userId: String
  fieldGroups: [FieldGroup!]
}

type FieldGroup {
  id: ID!
  name: String!
  order: Int!
  fields: [Field!]
}

type Field {
  id: ID!
  name: String!
  order: Int!
  type: FieldType!
  required: Boolean!
}

type ViewStatus {
  id: ID!
  user: User
  userId: String
  defaultView: View
  defaultViewId: String
  activeView: View
  activeViewId: String
}

input ViewInput {
  id: ID
  name: String!
  fieldGroups: [FieldGroupInput!]
}

input FieldGroupInput {
  id: ID
  name: String!
  order: Int!
  fields: [FieldInput!]
}

input FieldInput {
  id: ID
  name: String!
  order: Int!
  type: FieldType!
  required: Boolean!
}

########################### File ##################################

type Clinic {
  id: ID
  name: String!
  examinationPrice: Int
  followupPrice: Int
  duration: Int
  appointmentsCount: Int
  doctorName: String
  doctorTitle: String
  doctorJobDescription: String
  address: String
  phoneNo: String
  logo: File
}

input ClinicInput {
  id: ID
  doctorName: String
  doctorTitle: String
  doctorJobDescription: String
  address: String
  phoneNo: String
  logoId: ID
  examinationPrice: Int
  followupPrice: Int
  duration: Int
  appointmentsCount: Int
}

type File {
  id: ID!
  filename: String!
  mimetype: String
  encoding: String
  url: String
}

########################### Snippet ##################################

type Snippet implements Searchable {
  id: ID!
  title: String!
  searchName: String!
  body: String!
}

input SnippetInput {
  title: String!
  body: String!
}

########################### Labs ##################################

type PatientLab {
  id: ID
  patient: Patient
  name: String
  documents: [LabDocument!]
}

type LabDocument {
  id: ID
  file: File
}

input PatientLabInput {
  patientId: ID!
  name: String!
  documents: [ID!]
}

########################### History ##################################

type MedicalHistory {
  id: ID!
  medicineName: String!
  frequency: String
  dose: String
  fromDate: Date
}

type FamilyHistory {
  id: ID!
  disease: String!
  relative: String!
}

input MedicalHistoryInput {
  medicineName: String!
  frequency: String
  dose: String
  fromDate: Date
  patientId: ID!
}

input FamilyHistoryInput {
  disease: String!
  relative: String!
  patientId: ID!
}

########################### Expense ##################################

type Expense {
  id: ID!
  name: String!
  amount: Int!
  date: Date!
  invoiceNo: String
}

input ExpenseInput {
  name: String!
  amount: Int!
  date: Date!
  invoiceNo: String
  clinicId: ID!
}

input ExpenseUpdateInput {
  id: ID!
  name: String!
  amount: Int!
  date: Date!
  invoiceNo: String
}

########################### Revenue ##################################

type Revenue {
  id: ID!
  name: String!
  amount: Int!
  date: Date!
  invoiceNo: String
}

input RevenueInput {
  name: String!
  amount: Int!
  date: Date!
  invoiceNo: String
  clinicId: ID!
}

input RevenueUpdateInput {
  id: ID!
  name: String!
  amount: Int!
  date: Date!
  invoiceNo: String
}
