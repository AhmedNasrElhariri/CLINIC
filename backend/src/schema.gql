scalar Date
scalar VitalData
scalar JSON
scalar Upload

enum PatientMembershipType {
  Primary
  Secondary
}

enum AppointmentType {
  Examination
  Followup
}

enum Sex {
  Female
  Male
}

enum FieldType {
  Text
  Number
  LongText
}

enum AppointmentStatus {
  Scheduled
  Cancelled
  Missed
  Changed
  Archived
  Done
}

########################### Query ##################################

type Query {
  hello(name: String): String!
  patients: [Patient!]
  appointments(input: AppointmentQueryInput): [Appointment!]
  appointment(id: ID!): Appointment
  appointmentHistory(id: ID!): [Appointment!]
  patient(id: ID!): Patient
  listMyViews: [View!]
  activeView: View!
  listMyViewsStatus: ViewStatus
  myClinic: Clinic!
}

########################### Mutation ##################################

type Mutation {
  createPatient(input: PatientInput!): Patient!
  createAppointment(input: AppointmentInput!): Appointment!
  updateAppointment(appointment: UpdateAppointmentInput!): Appointment!
  archiveAppointment(id: ID!): Appointment!
  setAppointmentDone(id: ID!): Appointment!
  createView(view: ViewInput!): Boolean
  editView(groups: [FieldGroupInput!]): Boolean
  login(email: String!, password: String!): AuthPayload
  verify(token: String): User
  activateView(viewId: ID!): ViewStatus!
  createDefaultView: Boolean
  adjustAppointment(id: ID!, date: Date!): Appointment!
  cancelAppointment(id: ID!): Appointment!
  singleUpload(file: Upload!): File!
  multipleUpload(files: [Upload!]!): [File!]!
  updateClinic(clinic: ClinicInput!): Clinic
}

########################### Auth ##################################

type AuthPayload {
  token: String
  user: User
}

input UserLoginInput {
  email: String!
  password: String!
}

########################### User ##################################

type User {
  id: ID!
  name: String!
  email: String!
}

########################### Patient ##################################

type Patient {
  id: ID!
  type: PatientMembershipType!
  name: String!
  phoneNo: String!
  age: Int!
  sex: Sex!
  appointments: [Appointment!]
}

input PatientInput {
  name: String!
  phoneNo: String!
  age: Int!
  sex: Sex!
  type: PatientMembershipType!
}

########################### Appointment ##################################

type Appointment {
  id: ID!
  date: Date
  type: AppointmentType!
  status: AppointmentStatus!
  labs: JSON
  patient: Patient!
  data: [AppointmentField!]
}

type AppointmentField {
  id: ID!
  value: JSON
  field: Field!
}

input AppointmentInput {
  patient: ID!
  date: Date!
  type: AppointmentType!
  labs: JSON
}

input UpdateAppointmentInput {
  id: ID!
  labs: JSON
  data: [AppointmentFieldInput!]
}

input AppointmentQueryInput {
  ids: [ID]
  patients: [ID]
  fromDate: Date
  toDate: Date
  type: AppointmentType
}

input AppointmentFieldInput {
  id: ID
  value: JSON
  fieldId: ID!
}

########################### views ##################################

type View {
  id: ID!
  name: String
  default: Boolean
  user: User
  userId: String
  fieldGroups: [FieldGroup!]
}

type FieldGroup {
  id: ID!
  name: String!
  order: Int!
  fields: [Field!]
}

type Field {
  id: ID!
  name: String!
  order: Int!
  type: FieldType!
  required: Boolean!
}

type ViewStatus {
  id: ID!
  user: User
  userId: String
  defaultView: View
  defaultViewId: String
  activeView: View
  activeViewId: String
}

input ViewInput {
  id: ID
  name: String!
  fieldGroups: [FieldGroupInput!]
}

input FieldGroupInput {
  id: ID
  name: String!
  order: Int!
  fields: [FieldInput!]
}

input FieldInput {
  id: ID
  name: String!
  order: Int!
  type: FieldType!
  required: Boolean!
}

########################### File ##################################

type Clinic {
  id: ID
  doctorName: String
  doctorTitle: String
  doctorJobDescription: String
  address: String
  phoneNo: String
  logo: File
}

input ClinicInput {
  id: ID
  doctorName: String
  doctorTitle: String
  doctorJobDescription: String
  address: String
  phoneNo: String
  logoId: ID
}

########################### File ##################################

type File {
  id: ID!
  filename: String!
  mimetype: String
  encoding: String
  url: String
}
